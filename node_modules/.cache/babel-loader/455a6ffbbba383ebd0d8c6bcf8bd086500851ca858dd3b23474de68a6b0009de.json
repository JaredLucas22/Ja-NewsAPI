{"ast":null,"code":"var _jsxFileName = \"/Users/jaredlucas/Documents/GitHub/News/NewsAPI-React/src/News.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass News extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      source: props.source\n    };\n  }\n  render() {\n    const {\n      articles\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    if (this.state.source !== this.props.source) this.reloadSource();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        cellHeight: 180,\n        className: classes.gridList,\n        cols: 4,\n        children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n          cols: 4,\n          style: {\n            height: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            component: \"div\",\n            children: [\"Berita dari \", this.props.source]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, \"Subheader\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), articles[0] && /*#__PURE__*/_jsxDEV(GridListTile, {\n          cols: 3,\n          rows: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: articles[0].urlToImage,\n            alt: articles[0].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: articles[0].title,\n            subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"by: \", articles[0].source.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 27\n            }, this),\n            actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.icon,\n              href: articles[0].url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, articles[0].urlToImage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), articles.slice(1).map(article => /*#__PURE__*/_jsxDEV(GridListTile, {\n          cols: 1,\n          rows: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: article.urlToImage,\n            alt: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: article.title,\n            subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"by: \", article.source.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 27\n            }, this),\n            actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n              className: classes.icon,\n              href: article.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, article.urlToImage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  componentDidMount() {\n    // Use mock data instead of making an API call\n    this.setState({\n      articles: mockData.results\n    });\n  }\n}\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 1300,\n    height: 1300\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n});\nNews.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(News);","map":{"version":3,"names":["React","Component","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","jsxDEV","_jsxDEV","News","constructor","props","state","articles","source","render","classes","reloadSource","className","root","children","cellHeight","gridList","cols","style","height","component","fileName","_jsxFileName","lineNumber","columnNumber","rows","src","urlToImage","alt","title","subtitle","name","actionIcon","icon","href","url","target","rel","slice","map","article","componentDidMount","setState","mockData","results","styles","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","width","color","propTypes","object","isRequired"],"sources":["/Users/jaredlucas/Documents/GitHub/News/NewsAPI-React/src/News.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nclass News extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      source: props.source,\n    };\n  }\n\n  render() {\n    const { articles } = this.state;\n    const { classes } = this.props;\n\n    if (this.state.source !== this.props.source) this.reloadSource();\n    return (\n      <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList} cols={4}>\n          <GridListTile key=\"Subheader\" cols={4} style={{ height: 'auto' }}>\n            <ListSubheader component=\"div\">Berita dari {this.props.source}</ListSubheader>\n          </GridListTile>\n\n          {/* Featured Headline */}\n          {articles[0] && (\n            <GridListTile key={articles[0].urlToImage} cols={3} rows={2}>\n              <img src={articles[0].urlToImage} alt={articles[0].title} />\n              <GridListTileBar\n                title={articles[0].title}\n                subtitle={<span>by: {articles[0].source.name}</span>}\n                actionIcon={\n                  <IconButton className={classes.icon} href={articles[0].url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          )}\n\n          {/* Smaller Headlines */}\n          {articles.slice(1).map((article) => (\n            <GridListTile key={article.urlToImage} cols={1} rows={1}>\n              <img src={article.urlToImage} alt={article.title} />\n              <GridListTileBar\n                title={article.title}\n                subtitle={<span>by: {article.source.name}</span>}\n                actionIcon={\n                  <IconButton className={classes.icon} href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // Use mock data instead of making an API call\n    this.setState({\n      articles: mockData.results,\n    });\n  }\n}\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 1300,\n    height: 1300,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n});\n\nNews.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(News);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}